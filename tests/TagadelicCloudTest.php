<?php

require_once 'TagadelicCloud.php';
require_once 'TagadelicTag.php';
require_once 'TagadelicDrupalWrapper.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-05-16 at 15:23:33.
 */
class TagadelicCloudTest extends PHPUnit_Framework_TestCase {
  /**
   * @var TagadelicCloud
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new TagadelicCloud(1337);

    $this->blackbeard = $this->getMock("TagadelicTag", array("name", "count", "set_weight"), array(14, "blackbeard", 100));

    $this->blackbeard->expects($this->any())
      ->method("name")
      ->will($this->returnValue("blackbeard"));
    $this->blackbeard->expects($this->any())
      ->method("count")
      ->will($this->returnValue(100));

    $this->jane = $this->getMock("TagadelicTag", array("name", "count", "set_weight"), array(14, "jane", 200));
    $this->jane->expects($this->any())
      ->method("name")
      ->will($this->returnValue("jane"));
    $this->jane->expects($this->any())
      ->method("count")
      ->will($this->returnValue(200));

    $this->mock_tags = array($this->blackbeard, $this->jane);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
  }

  /**
   * constructor should set the ID to the variable passed.
   */
  public function test__construct() {
    // First param should be assigned to the id.
    $this->assertAttributeSame(1337, "id", $this->object);

    // Optional second argument pre-sets the tags.
    $this->object = new TagadelicCloud(1337, $this->mock_tags);
    $this->assertAttributeSame($this->mock_tags, "tags", $this->object);
  }

  /**
   * @covers TagadelicCloud::get_id
   */
  public function testGet_id() {
    $this->assertEquals(1337, $this->object->get_id());
  }

  /**
   * @covers TagadelicCloud::get_tags
   * Tests if get_Tags returns an array only.
   */
  public function testGet_tags() {
    $this->object = new TagadelicCloud(1337, $this->mock_tags);
    $this->assertSame($this->mock_tags, $this->object->get_tags());
  }

  /**
   * @covers TagadelicCloud::add_tag
   */
  public function testAdd_tag() {
    $this->object->add_tag($this->blackbeard);
    $this->assertAttributeContains($this->blackbeard, "tags", $this->object);
  }

  /**
   * TagadelicCloud::add_tag() is chainable
   */
  public function testAdd_tagIsChainable() {
    $this->assertEquals($this->object->add_tag($this->blackbeard), $this->object);
  }

  /**
   * @covers TagadelicCloud::from_cache
   */
  public function testFrom_cache() {
    $drupal = $this->getMock("TagadelicDrupalWrapper");
    $drupal->expects($this->any())
      ->method("cache_get")
      ->with("tagadelic_cloud_1337");
    TagadelicCloud::from_cache(1337, $drupal);
  }

  /**
   * Get Tags should calculate the weights
   */
  public function testGetCalculatedTags() {
    foreach ($this->mock_tags as $mock_tag) {
      $mock_tag->expects($this->once())
        ->method('set_weight')
        ->will($this->returnSelf());
      $mocks[] = $mock_tag;
    }
    $this->object = new TagadelicCloud(1337, $mocks);
    $this->object->get_tags();
  }
}
